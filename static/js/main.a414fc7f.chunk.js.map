{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","totalLength","Math","ceil","toPage","withInfo","className","type","classNames","disabled","onClick","Array","map","_","i","active","random","action","onSubmit","event","preventDefault","name","min","value","onChange","target","Number","React","memo","App","useState","setTotal","setPerPage","choosePage","atrName","ReactDOM","render","document","getElementById"],"mappings":"0NAUMA,EAA8B,SAAC,GAK9B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,KACAC,EACI,EADJA,aAMMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAASL,EAAOD,EAAUD,EAC5BE,EAAOD,EACPD,EAKEQ,EAAQ,UAHGD,EAASN,EAAU,EAAI,EACpCM,EAASN,EAAU,EACnB,EACU,YAAkBM,EAAlB,eAA+BP,GAE7C,OACE,qCACE,6BAAKQ,IACL,qBACEC,UAAU,uBADZ,UAGE,6BACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,mBAAoB,CACxCC,SAAmB,IAATV,IAEZW,QAAS,kBAAMV,EAAcD,EAAO,EAAI,SACxCU,SAAUV,GAAQ,EANpB,yBAYD,YAAI,IAAIY,MAAMV,IAAcW,KAAI,SAACC,EAAGC,GAAJ,OAC/B,oBACER,UAAWE,IAAW,sBAAuB,CAC3CO,OAAQhB,IAASe,EAAI,IAFzB,SAME,wBACEP,KAAK,SACLD,UAAU,YACVI,QAAS,WACPV,EAAac,EAAI,EAAG,SAJxB,SAOGA,EAAI,KATFZ,KAAKc,aAcd,wBACET,KAAK,SACLD,UAAWE,IAAW,mBAAoB,CACxCC,SAAUV,IAASE,IAErBS,QAAS,kBAAMV,EAAcD,EAAO,EAAI,SACxCU,SAAUV,IAASE,EANrB,0BAYF,uBACEgB,OAAO,OACPX,UAAU,8BACVY,SAnEe,SAACC,GACpBA,EAAMC,kBA+DJ,UAKE,uBACEb,KAAK,SACLc,KAAK,QACLf,UAAU,eACVgB,IAAI,IACJC,MAAO1B,EACP2B,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXzB,GAAcyB,EAAOF,MAAO,YAGhC,2DAEA,yBACEF,KAAK,UACLE,MAAOzB,EACPQ,UAAU,eACVkB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OACRzB,EAAa0B,OAAOD,EAAOF,OAAQ,YALvC,UAQE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,4DAOOI,MAAMC,KAAKhC,GClFXiC,G,MA/BO,WACpB,MAA0BC,mBAAS,IAAnC,mBAAOjC,EAAP,KAAckC,EAAd,KACA,EAA8BD,mBAAS,GAAvC,mBAAOhC,EAAP,KAAgBkC,EAAhB,KACA,EAA2BF,mBAAS,GAApC,mBAAO/B,EAAP,KAAakC,EAAb,KAgBA,OACE,qBAAK3B,UAAU,MAAf,SACE,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aApBe,SAACuB,EAAeW,GACnB,UAAZA,GACFH,EAASR,GAGK,YAAZW,GACFF,EAAWT,GAGG,SAAZW,GACFD,EAAWV,UChBjBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a414fc7f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  page: number,\n  onPageChange: (value: number, atrName: string) => void;\n}\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n}) => {\n  const handleSumbit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n  };\n\n  const totalLength = Math.ceil(total / perPage);\n  const toPage = page * perPage < total\n    ? page * perPage\n    : total;\n\n  const fromPage = toPage - perPage + 1 > 0\n    ? toPage - perPage + 1\n    : 1;\n  const withInfo = `${fromPage}-${toPage} of ${total}`;\n\n  return (\n    <>\n      <h1>{withInfo}</h1>\n      <ul\n        className=\"pagination App__list\"\n      >\n        <li>\n          <button\n            type=\"button\"\n            className={classNames('submit page-link', {\n              disabled: page === 1,\n            })}\n            onClick={() => onPageChange((page - 1), 'page')}\n            disabled={page <= 1}\n          >\n            « Prev\n          </button>\n        </li>\n\n        {[...new Array(totalLength)].map((_, i) => (\n          <li\n            className={classNames('page-item App__item', {\n              active: page === i + 1,\n            })}\n            key={Math.random()}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => {\n                onPageChange(i + 1, 'page');\n              }}\n            >\n              {i + 1}\n            </button>\n          </li>\n        ))}\n\n        <button\n          type=\"button\"\n          className={classNames('page-link submit', {\n            disabled: page === totalLength,\n          })}\n          onClick={() => onPageChange((page + 1), 'page')}\n          disabled={page === totalLength}\n        >\n          Next »\n        </button>\n      </ul>\n\n      <form\n        action=\"post\"\n        className=\"form-group pagination__form\"\n        onSubmit={handleSumbit}\n      >\n        <input\n          type=\"number\"\n          name=\"total\"\n          className=\"form-control\"\n          min=\"1\"\n          value={total}\n          onChange={({ target }) => {\n            onPageChange(+target.value, 'total');\n          }}\n        />\n        <p>Select the number of pages</p>\n\n        <select\n          name=\"perPage\"\n          value={perPage}\n          className=\"form-control\"\n          onChange={({ target }) => (\n            onPageChange(Number(target.value), 'perPage')\n          )}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n        <p>Select a scroll step</p>\n      </form>\n\n    </>\n  );\n};\n\nexport default React.memo(Pagination);\n","import React, { useState } from 'react';\nimport Pagination from './components/Pagination';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [total, setTotal] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [page, choosePage] = useState(1);\n\n  const onPageChange = (value: number, atrName: string) => {\n    if (atrName === 'total') {\n      setTotal(value);\n    }\n\n    if (atrName === 'perPage') {\n      setPerPage(value);\n    }\n\n    if (atrName === 'page') {\n      choosePage(value);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Pagination\n        total={total}\n        perPage={perPage}\n        page={page}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}